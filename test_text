import text_reader  # Import the text reading module

# Function to monitor the button state with debouncing
def button_listener_text():
    global text_reading_mode, stop_thread_event
    last_press_time = 0
    debounce_time = 2  # Debounce time in seconds

    while True:
        if GPIO.input(button_pin_text) == GPIO.HIGH:
            current_time = time.time()
            if current_time - last_press_time > debounce_time:
                text_reading_mode = not text_reading_mode  # Toggle mode
                if text_reading_mode:
                    print("Entering text reading mode...")
                    stop_thread_event.clear()  # Reset the event
                    threading.Thread(target=text_reader.text_main, args=(ESP32_CAM_URL, stop_thread_event), daemon=True).start()
                else:
                    print("Exiting text reading mode...")
                    stop_thread_event.set()  # Signal the thread to stop
                    speak("Exiting text reading mode")
                last_press_time = current_time
        time.sleep(0.1)  # Polling interval
